#ifndef __USBLIB_H__
#define __USBLIB_H__


#ifdef __cplusplus
extern "C"
{
#endif

/****************************************************************************
* 名称:
*		USB_Init()
* 功能:
*		初始化 USB 设备 (9603).
* 参数:
* 返回:
*		int 类型, 如果初始化成功返回非0, 失败返回0.
* 注释:
*		在对USB设备进行读写前, 需对USB设备进行初始化.
* 修改:
****************************************************************************/
extern int USB_Init(void);

/****************************************************************************
* 名称:
*		USB_Purge()
* 功能:
*		清除输入缓冲区.
* 参数:
*		channel		---输入,通道ID, (0-2)
* 返回:
*		int 类型, 成功返回1, 否则返回0 (通常是channel参数不正确).
* 注释:
* 修改:
****************************************************************************/
extern void USB_Purge(unsigned int channel);

/****************************************************************************
* 名称:
*	USB_Read()
* 功能:
*		从指定USB通道,接收指定的字节数到接收缓冲区.
* 参数:
*		channel		---输入,通道ID, (0-2)
*		rev_buf		---输出,接收数据的缓冲区指针
*		count		---输入,准备接收数据的大小,字节为单位
* 返回:
*		int 类型, 返回实际接收的数据大小,字节为单位, 错误返回-1.
* 注释:
*		USB_Read阻塞读取USB通道数据, 直到数据到达缓冲区.
* 修改:
****************************************************************************/
extern int USB_Read(unsigned channel, char *rev_buf, unsigned int count);

/****************************************************************************
* 名称:
*	USB_Write()
* 功能:
*		从指定USB通道发送指定的字节数的数据.
* 参数:
*		channel		---输入,通道ID, (0-2)
*		snd_buf		---输入,待发送的数据的缓冲区指针
*		length		---输入,准备发送数据的大小,字节为单位
* 返回:
*		int 类型, 返回实际发送的数据大小,字节为单位, 错误返回-1.
* 注释:
*		USB_Write阻塞发送USB通道数据, 直到发送完指定长度的数据.
* 修改:
****************************************************************************/
extern int USB_Write(unsigned channel, const char *snd_buf, unsigned int length);

#ifdef __cplusplus
}
#endif

#endif /* __USBLIB_H__ */